#!/usr/bin/env ruby

require_relative '../lib/pandata'
require_relative '../lib/pandata/argv_parser'

options = Pandata::ArgvParser.parse(ARGV)
scraper_results = {}

if !options[:id]
  puts 'You must supply a webname or email to -i. See -h for help.'
  exit
end

scraper = Pandora::Scraper.get(options[:id])

if scraper.kind_of? Array
  puts "No direct matches for '#{options[:id]}'.\n\n"
  if !scraper.empty?
    puts "Webnames with '#{options[:id]}' in the profile name:"
    puts scraper.map { |val| "- #{val}" }
  end
  exit
end

options[:data_to_get].each do |data_type|
  if /(bookmark|like)e?d_(.*)/ =~ data_type
    method = ($1 + 's').to_sym
    arg = $2.to_sym
    scraper_results[data_type] = scraper.public_send(method, arg)
  else
    scraper_results[data_type] = scraper.public_send(data_type)
  end
end

if options[:return_as_json]
  require 'json'
  puts JSON.generate(scraper_results)
  exit
end

require 'set'
scraper_results.each do |key, value|
  case key
  when :playing_station
    puts 'Playing Station:'
    puts "  - #{value}"
  when :recent_activity
    puts 'Recent Activity:'
    puts value.map { |activity| "  - #{activity}" }
  when :liked_albums
    puts 'Liked Albums:'
    artist_albums = {}
    value.each do |hash|
      (artist_albums[hash[:artist]] ||= Set.new) << hash[:album]
    end
    artist_albums.sort.each do |key, value|
      puts "  - #{key}"
      value.sort.each do |album|
        puts "      - #{album}"
      end
    end
  when /.*stations/
    puts $~.to_s =~ /liked/ ? 'Liked Stations:' : 'Stations:'
    puts value.sort.map { |station| "  - #{station}" }
  when /.*artists/
    puts $~.to_s =~ /liked/ ? 'Liked Artists:' : 'Bookmarked Artists:'
    puts value.uniq.sort.map { |artist| "  - #{artist}" }
  when /.*tracks/
    puts $~.to_s =~ /liked/ ? 'Liked Tracks:' : 'Bookmarked Tracks:'
    artist_tracks = {}
    value.each do |hash|
      (artist_tracks[hash[:artist]] ||= Set.new) << hash[:track]
    end
    artist_tracks.sort.each do |key, value|
      puts "  - #{key}"
      value.sort.each do |track|
        puts "      - #{track}"
      end
    end
  when /following|followers/
    puts $~.to_s.capitalize + ':'
    value.each do |hash|
      puts "  - name: #{hash[:name]}
    webname: #{hash[:webname]}
    profile: #{hash[:href]}"
    end
  end
end
