#!/usr/bin/env ruby

require_relative '../lib/pandata'
require_relative '../lib/pandata/argv_parser'
require_relative '../lib/pandata/data_formatter'

options = Pandata::ArgvParser.parse(ARGV)

if !options[:id]
  puts 'You must supply a webname or email to -i. See -h for help.'
  exit
end

scraper = Pandora::Scraper.get(options[:id])

if scraper.kind_of? Array
  puts "No direct matches for '#{options[:id]}'.\n\n"
  if !scraper.empty?
    puts "Webnames with '#{options[:id]}' in the profile name:"
    puts scraper.map { |val| "- #{val}" }
  end
  exit
end

scraper_results = {}
options[:data_to_get].each do |data_type|
  if /(bookmark|like)e?d_(.*)/ =~ data_type
    method = ($1 + 's').to_sym
    arg = $2.to_sym
    scraper_results[data_type] = scraper.public_send(method, arg)
  else
    scraper_results[data_type] = scraper.public_send(data_type)
  end
end

if options[:return_as_json]
  require 'json'
  puts JSON.generate(scraper_results)
  exit
end

formatter = Pandata::DataFormatter.new
scraper_results.each do |key, value|
  case key
  when :playing_station
    puts 'Playing Station:'
    puts formatter.list value
  when :recent_activity
    puts 'Recent Activity:'
    puts formatter.list value
  when :liked_albums
    puts 'Liked Albums:'
    puts formatter.albums value
  when /.*tracks/
    puts $~.to_s =~ /liked/ ? 'Liked Tracks:' : 'Bookmarked Tracks:'
    puts formatter.tracks value
  when /.*artists/
    puts $~.to_s =~ /liked/ ? 'Liked Artists:' : 'Bookmarked Artists:'
    puts formatter.uniq_sort_list value
  when /.*stations/
    puts $~.to_s =~ /liked/ ? 'Liked Stations:' : 'Stations:'
    puts formatter.uniq_sort_list value
  when /following|followers/
    puts $~.to_s.capitalize + ':'
    puts formatter.followx value
  end
end
